package com.test.notificationserver;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
@RestController
@EnableBinding(Sink.class)
public class NotificationApplication {
	private Logger logger = org.slf4j.LoggerFactory.getLogger(NotificationserviceApplication.class);

	@Autowired
	private WebClient.Builder webClientBuilder;

	@Autowired
	private CircuitBreakerFactory circuitBreakerFactory;

	@StreamListener(Sink.INPUT)
	public void consumeMessage(Message message) {

		EmployeeReponseModel Employeemodel = circuitBreakerFactory.create("getEmployee").run(() -> {
			EmployeeReponseModel model = webClientBuilder.build().get()
					.uri("http://localhost:9002/api/v1/employees/" + message.getEmployeeId()).retrieve()
					.bodyToMono(EmployeeReponseModel.class).block();
			return model;
		}, t -> {
			EmployeeReponseModel model = new EmployeeReponseModel();
			model.setFirstName("Anonymous");
			model.setLastName("Employee");
			return model;
		});

		if (Employeemodel != null) {
			logger.info("Consume Payload: " + Employeemodel.getFirstName() + " " + Employeemodel.getLastName() + " "
					+ message.getMessage());
		}
	}

	public static void main(String[] args) {
		SpringApplication.run(NotificationserviceApplication.class, args);
	}

}
